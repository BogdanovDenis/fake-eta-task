// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fake-eta-task/internal/car (interfaces: CarService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/fake-eta-task/internal/car/models"
	models0 "github.com/fake-eta-task/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockCarService is a mock of CarService interface
type MockCarService struct {
	ctrl     *gomock.Controller
	recorder *MockCarServiceMockRecorder
}

// MockCarServiceMockRecorder is the mock recorder for MockCarService
type MockCarServiceMockRecorder struct {
	mock *MockCarService
}

// NewMockCarService creates a new mock instance
func NewMockCarService(ctrl *gomock.Controller) *MockCarService {
	mock := &MockCarService{ctrl: ctrl}
	mock.recorder = &MockCarServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockCarService) EXPECT() *MockCarServiceMockRecorder {
	return m.recorder
}

// GetCars mocks base method
func (m *MockCarService) GetCars(arg0 context.Context, arg1 models0.Position) ([]models.Car, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCars", arg0, arg1)
	ret0, _ := ret[0].([]models.Car)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCars indicates an expected call of GetCars
func (mr *MockCarServiceMockRecorder) GetCars(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCars", reflect.TypeOf((*MockCarService)(nil).GetCars), arg0, arg1)
}
