// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/fake-eta-task/internal (interfaces: InternalService)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	models "github.com/fake-eta-task/internal/car/models"
	models0 "github.com/fake-eta-task/internal/predict/models"
	models1 "github.com/fake-eta-task/models"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInternalService is a mock of InternalService interface
type MockInternalService struct {
	ctrl     *gomock.Controller
	recorder *MockInternalServiceMockRecorder
}

// MockInternalServiceMockRecorder is the mock recorder for MockInternalService
type MockInternalServiceMockRecorder struct {
	mock *MockInternalService
}

// NewMockInternalService creates a new mock instance
func NewMockInternalService(ctrl *gomock.Controller) *MockInternalService {
	mock := &MockInternalService{ctrl: ctrl}
	mock.recorder = &MockInternalServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInternalService) EXPECT() *MockInternalServiceMockRecorder {
	return m.recorder
}

// GetCars mocks base method
func (m *MockInternalService) GetCars(arg0 context.Context, arg1 models1.Position) ([]models.Car, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetCars", arg0, arg1)
	ret0, _ := ret[0].([]models.Car)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetCars indicates an expected call of GetCars
func (mr *MockInternalServiceMockRecorder) GetCars(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetCars", reflect.TypeOf((*MockInternalService)(nil).GetCars), arg0, arg1)
}

// PredictWaitingTimes mocks base method
func (m *MockInternalService) PredictWaitingTimes(arg0 context.Context, arg1 []models0.Position, arg2 models0.Position) ([]int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PredictWaitingTimes", arg0, arg1, arg2)
	ret0, _ := ret[0].([]int64)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PredictWaitingTimes indicates an expected call of PredictWaitingTimes
func (mr *MockInternalServiceMockRecorder) PredictWaitingTimes(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PredictWaitingTimes", reflect.TypeOf((*MockInternalService)(nil).PredictWaitingTimes), arg0, arg1, arg2)
}
